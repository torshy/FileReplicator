<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:FileReplicator="clr-namespace:TRock.FileReplicator"
    xmlns:Converters1="clr-namespace:TRock.FileReplicator.Converters"
    xmlns:Services="clr-namespace:TRock.FileReplicator.Services"
    xmlns:Controls="clr-namespace:TRock.FileReplicator.Controls">

    <Converters1:StringEmptyToVisibilityConverter
        x:Key="StringEmptyToVisibilityConverter" />

    <Converters1:InstanceToObjectTypeConverter
        x:Key="InstanceToObjectTypeConverter" />

    <!-- SubmenuItem -->

    <ControlTemplate
        x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
        TargetType="MenuItem">
        <Border
            Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="Auto"
                        SharedSizeGroup="Icon" />
                    <ColumnDefinition
                        Width="*" />
                    <ColumnDefinition
                        Width="Auto"
                        SharedSizeGroup="Shortcut" />
                    <ColumnDefinition
                        Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    Name="Icon"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    ContentSource="Icon"
                    MaxHeight="24" />
                <Border
                    Name="Check"
                    Width="13"
                    Height="13"
                    Visibility="Collapsed"
                    Margin="6,0,6,0"
                    Background="{DynamicResource {x:Static FileReplicator:AppTheme.BackgroundBrushKey}}"
                    BorderThickness="1"
                    BorderBrush="{DynamicResource {x:Static FileReplicator:AppTheme.ContrastForegroundKey}}">
                    <Path
                        Name="CheckMark"
                        Width="7"
                        Height="7"
                        Visibility="Hidden"
                        SnapsToDevicePixels="False"
                        Stroke="{TemplateBinding Foreground}"
                        StrokeThickness="2"
                        Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                </Border>
                <ContentPresenter
                    Name="HeaderHost"
                    VerticalAlignment="Center"
                    Grid.Column="1"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <TextBlock
                    x:Name="InputGestureText"
                    Grid.Column="2"
                    Text="{TemplateBinding InputGestureText}"
                    Margin="5,2,0,2"
                    DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger
                Property="Icon"
                Value="{x:Null}">
                <Setter
                    TargetName="Icon"
                    Property="Visibility"
                    Value="Hidden" />
            </Trigger>
            <Trigger
                Property="IsChecked"
                Value="true">
                <Setter
                    TargetName="CheckMark"
                    Property="Visibility"
                    Value="Visible" />
            </Trigger>
            <Trigger
                Property="IsCheckable"
                Value="true">
                <Setter
                    TargetName="Check"
                    Property="Visibility"
                    Value="Visible" />
                <Setter
                    TargetName="Icon"
                    Property="Visibility"
                    Value="Hidden" />
            </Trigger>
            <Trigger
                Property="IsHighlighted"
                Value="true">
                <Setter
                    TargetName="Border"
                    Property="Background"
                    Value="{DynamicResource {x:Static FileReplicator:AppTheme.SubtleBrushKey}}" />
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="false">
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static FileReplicator:AppTheme.DisabledBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuHeader -->

    <ControlTemplate
        x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
        TargetType="MenuItem">
        <Border
            Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="Auto"
                        SharedSizeGroup="Icon" />
                    <ColumnDefinition
                        Width="*" />
                    <ColumnDefinition
                        Width="Auto"
                        SharedSizeGroup="Shortcut" />
                    <ColumnDefinition
                        Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    Name="Icon"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    ContentSource="Icon"
                    MaxHeight="18" />
                <ContentPresenter
                    Name="HeaderHost"
                    Grid.Column="1"
                    ContentSource="Header"
                    VerticalAlignment="Center"
                    RecognizesAccessKey="True" />
                <TextBlock
                    x:Name="InputGestureText"
                    Grid.Column="2"
                    Text="{TemplateBinding InputGestureText}"
                    VerticalAlignment="Center"
                    Margin="5,2,2,2"
                    DockPanel.Dock="Right" />
                <Path
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 0 7 L 4 3.5 Z"
                    Fill="{TemplateBinding Foreground}" />
                <Popup
                    Name="Popup"
                    Placement="Right"
                    HorizontalOffset="-4"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    AllowsTransparency="True"
                    Focusable="False"
                    PopupAnimation="Fade">
                    <Border
                        Name="SubmenuBorder"
                        SnapsToDevicePixels="True"
                        Background="{DynamicResource {x:Static FileReplicator:AppTheme.BackgroundBrushKey}}"
                        BorderBrush="{DynamicResource {x:Static FileReplicator:AppTheme.AccentBrushKey}}"
                        BorderThickness="2">
                        <StackPanel
                            IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger
                Property="Icon"
                Value="{x:Null}">
                <Setter
                    TargetName="Icon"
                    Property="Visibility"
                    Value="Collapsed" />
            </Trigger>
            <Trigger
                Property="IsHighlighted"
                Value="true">
                <Setter
                    TargetName="Border"
                    Property="Background"
                    Value="{DynamicResource {x:Static FileReplicator:AppTheme.SubtleBrushKey}}" />
            </Trigger>
            <Trigger
                SourceName="Popup"
                Property="Popup.AllowsTransparency"
                Value="True">
                <Setter
                    TargetName="SubmenuBorder"
                    Property="Padding"
                    Value="0,3,0,3" />
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="false">
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static FileReplicator:AppTheme.DisabledBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        x:Key="{x:Type MenuItem}"
        TargetType="MenuItem"
        BasedOn="{StaticResource {x:Type MenuItem}}">
        <Style.Triggers>
            <Trigger
                Property="Role"
                Value="TopLevelHeader">
                <Setter
                    Property="Template"
                    Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter
                    Property="Grid.IsSharedSizeScope"
                    Value="true" />
            </Trigger>
            <Trigger
                Property="Role"
                Value="TopLevelItem">
                <Setter
                    Property="Template"
                    Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger
                Property="Role"
                Value="SubmenuHeader">
                <Setter
                    Property="Template"
                    Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger
                Property="Role"
                Value="SubmenuItem">
                <Setter
                    Property="Template"
                    Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Style which allows a separator to have text inside-->
    <Style
        x:Key="SeparatorStyleKey"
        TargetType="{x:Type Separator}">
        <Setter
            Property="Margin"
            Value="0,4,0,4" />
        <Setter
            Property="IsEnabled"
            Value="False" />
        <Setter
            Property="Focusable"
            Value="False" />
        <Setter
            Property="IsHitTestVisible"
            Value="True" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Separator}">
                    <Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    Width="24" />
                                <ColumnDefinition
                                    Width="Auto" />
                                <ColumnDefinition
                                    Width="*" />
                            </Grid.ColumnDefinitions>

                            <Border
                                Grid.Column="0"
                                BorderBrush="{DynamicResource {x:Static FileReplicator:AppTheme.SubtleBrushKey}}"
                                BorderThickness="0,1,0,0"
                                VerticalAlignment="Center" />
                            <ContentPresenter
                                Name="HeaderHost"
                                Grid.Column="1"
                                Content="{Binding Content}"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                TextBlock.FontFamily="{DynamicResource {x:Static FileReplicator:AppTheme.FontFamilyLight}}"
                                TextBlock.FontSize="{DynamicResource {x:Static FileReplicator:AppTheme.FontSizeMedium}}"
                                Visibility="{Binding Content,
                                                     RelativeSource={RelativeSource Mode=Self},
                                                     Converter={StaticResource StringEmptyToVisibilityConverter}}"
                                RecognizesAccessKey="True"
                                Margin="4,0,4,0" />
                            <Border
                                Grid.Column="2"
                                BorderBrush="{DynamicResource {x:Static FileReplicator:AppTheme.SubtleBrushKey}}"
                                BorderThickness="0,1,0,0"
                                VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        TargetType="{x:Type Controls:CommandBarContextMenu}"
        BasedOn="{StaticResource {x:Type ContextMenu}}">
        <Style.Resources>
            <DataTemplate
                DataType="{x:Type Services:SeparatorCommandModel}">
                <Separator
                    Style="{StaticResource SeparatorStyleKey}" />
            </DataTemplate>

            <HierarchicalDataTemplate
                DataType="{x:Type Services:SubmenuCommandModel}"
                ItemsSource="{Binding ChildMenuItems}">
                <ContentControl
                    Content="{Binding Content}"
                    ContentTemplate="{Binding ContentTemplate}" />
            </HierarchicalDataTemplate>

            <DataTemplate
                DataType="{x:Type Services:CommandModel}">
                <ContentControl
                    Content="{Binding Content}"
                    ContentTemplate="{Binding ContentTemplate}" />
            </DataTemplate>
        </Style.Resources>
        <Setter
            Property="FontFamily"
            Value="{DynamicResource {x:Static FileReplicator:AppTheme.FontFamilyNormal}}" />
        <Setter
            Property="FontSize"
            Value="{DynamicResource {x:Static FileReplicator:AppTheme.FontSizeNormal}}" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource {x:Static FileReplicator:AppTheme.ForegroundBrushKey}}" />
        <Setter
            Property="Background"
            Value="{DynamicResource {x:Static FileReplicator:AppTheme.BackgroundBrushKey}}" />
        <Setter
            Property="BorderBrush"
            Value="{DynamicResource {x:Static FileReplicator:AppTheme.AccentBrushKey}}" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Stretch" />
        <Setter
            Property="BorderThickness"
            Value="2" />
        <Setter
            Property="ItemContainerStyle">
            <Setter.Value>
                <Style
                    TargetType="{x:Type MenuItem}"
                    BasedOn="{StaticResource {x:Type MenuItem}}">
                    <Setter
                        Property="ToolTip"
                        Value="{Binding Tooltip}" />
                    <Setter
                        Property="IsChecked"
                        Value="{Binding IsChecked}" />
                    <Setter
                        Property="Icon"
                        Value="{Binding Icon}" />
                    <Setter
                        Property="Command"
                        Value="{Binding Command}" />
                    <Setter
                        Property="CommandParameter"
                        Value="{Binding CommandParameter}" />
                    <Setter
                        Property="Visibility"
                        Value="{Binding Visibility}" />
                    <Setter
                        Property="VerticalContentAlignment"
                        Value="Center" />
                    <Setter
                        Property="Header"
                        Value="{Binding}" />
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding Converter={StaticResource InstanceToObjectTypeConverter}}"
                            Value="{x:Type Services:SeparatorCommandModel}">
                            <Setter
                                Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Separator
                                            Style="{StaticResource SeparatorStyleKey}" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter
            Property="ItemsSource"
            Value="{Binding ChildMenuItems}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Controls:CommandBarContextMenu}">
                    <Border
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="true">
                        <ItemsPresenter
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>